global
    # 前端的最大并发连接数
    maxconn 10000
    log 127.0.0.1 local0
defaults
    mode http
    log global

    # 启用该项，日志中将不会记录空连接，所谓空连接就是在上游的负载均衡或者监控系统为了探测该服务是否存活可用时需要定期的连接或者获取某一固定的组件或页面，或者探测扫描端口是否监听等动作被称为空连接。
    # 官方提示：如果上游没有其他负载均衡器的话，建议不要使用该参数
    option dontlognull

    # 前端的最大并发连接数
    maxconn 8000

    # 设置连接后端服务器的失败重试次数
    retries 2

    # 当使用了cookie时，haproxy将会将请求的后端服务器的serverID插入到cookie中，以保证会话的session持久性，而此时，后端服务器宕机，但是客户端的cookie不会刷新，设置此参数，将会将客户请求强制定向到另外一个后端server上，以保证服务的正常。
    option redispatch 

    # 连接客户端发送数据时最长等待时间
    timeout client 30s

    # 成功连接到一台服务器的最长等待时间
    timeout connect 5s

    # 服务器回应客户端数据发送的最长等待时间
    timeout server 5s

# manage管理后台的负载均衡
frontend rabbitmq_manage
    bind *:1081
    default_backend rabbitmq_manage

backend rabbitmq_manage
    # 基于权重进行轮叫
    balance roundrobin

    # RabbitMQ Manage集群节点
    server node1 node1:15672 check inter 1000
    server node2 node2:15672 check inter 1000
    server node3 node3:15672 check inter 1000

# 绑定队列端口的负载均衡
# listen是frontend和backend的合体，写起来更简化一点
listen rabbitmq_cluster
    bind *:1080
    mode tcp

    # 这个时间需要被设的很长，否则consumer会一直断开
    # 系统默认/proc/sys/net/ipv4/tcp_keepalive_time为7200（即2小时）
    # 一般不建议改系统配置，那就把这个超时时间改成3小时好了
    timeout server 3h
    timeout client 3h

    # RabbitMQ集群节点
    server node1 node1:5672 check inter 1000
    server node2 node2:5672 check inter 1000
    server node3 node3:5672 check inter 1000

# 开启haproxy监控
listen monitor
    bind *:8100
    mode http
    option httplog
    stats enable
    stats uri /stats
    stats refresh 5s